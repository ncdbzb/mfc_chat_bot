services:
  mfc_parser:
    build:
      context: ./mfc_parser
      dockerfile: Dockerfile.mfc_parser
    container_name: mfc_parser
    expose:
      - "5000"
    depends_on:
      - db
      - redis
      - chromadb
    env_file:
      - .env

  mfc_backend:
    build:
      context: ./mfc_backend
      dockerfile: Dockerfile.mfc_backend
    container_name: mfc_backend
    ports:
      - ${MFC_BACKEND_PORT}:${MFC_BACKEND_PORT}
    command: >
      uvicorn app.main:app --host 0.0.0.0 --port ${MFC_BACKEND_PORT}
    depends_on:
      - mfc_parser
    env_file:
      - .env

  celery:
    build:
      context: ./mfc_parser
      dockerfile: Dockerfile.celery
    container_name: celery
    depends_on:
      - db
      - redis
    env_file:
      - .env

  db:
    image: postgres:13-alpine
    container_name: db
    expose:
      - ${DB_PORT}
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  chromadb:
    image: chromadb/chroma:1.0.12
    container_name: chromadb
    expose:
      - ${CHROMADB_PORT}
    restart: unless-stopped
    volumes:
      - chroma_data:/chroma/chroma
      - ./chromadb_config.yaml:/config.yaml
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "/bin/bash", "-c", "cat < /dev/null > /dev/tcp/localhost/${CHROMADB_PORT}"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    container_name: redis
    image: redis:alpine
    expose:
      - ${REDIS_PORT}

volumes:
  postgres_data:
  chroma_data: